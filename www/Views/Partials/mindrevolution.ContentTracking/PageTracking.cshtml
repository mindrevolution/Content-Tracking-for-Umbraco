@using mindrevolution.ContentTracking.Models;
@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    string GATrackingId = Model.Content.GetPropertyValue<string>("googleAnalyticsTrackingId", true);
    if (!string.IsNullOrWhiteSpace(GATrackingId))
    {
        <script>
            (function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
                    (i[r].q = i[r].q || []).push(arguments)
                }, i[r].l = 1 * new Date(); a = s.createElement(o),
                m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
            })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

            ga('create', '@GATrackingId', 'auto');
            ga('set', 'anonymizeIp', true);

            @if (Model.Content.HasValue("ContentTracking"))
            {
                PageMeta ContentTracking = Model.Content.GetPropertyValue<PageMeta>("ContentTracking");
                if (!string.IsNullOrEmpty(ContentTracking.Category))
                {
                    <text>ga('set', 'contentGroup1', '@ContentTracking.Category'); </text>
                }
                if (!string.IsNullOrEmpty(ContentTracking.Format))
                {
                    <text>ga('set', 'contentGroup3', '@ContentTracking.Format'); </text>
                }
                if (!string.IsNullOrEmpty(ContentTracking.FunnelStage))
                {
                    <text>ga('set', 'contentGroup5', '@ContentTracking.FunnelStage'); </text>
                }
            }

            ga('send', 'pageview');
        </script>
    }
}
